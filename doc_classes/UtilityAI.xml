<?xml version="1.0" encoding="UTF-8" ?>
<class name="UtilityAI" inherits="Node" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
	</brief_description>
	<description>
		There are four main node groups in Utility AI GDExtension: Agent behaviours, Behaviour Tree, State Tree, and the Node Query System (NQS). All are utility-based systems for implementing robust AI systems to your games.
		The Agent behaviours, Utility enabled State Tree and Utility enabled Behaviour Tree focus on defining behaviours for AI agents. They answer the question "What is the best behaviour for the current situation?". Use these nodes when you want to choose what an AI should do.
		The Node Query System focuses on using utility functions to score and filter any type of Godot nodes. They answer the question "What is the best node for the job?". Use the NQS when you want to choose the best tile to move to, the biggest threat to attack, the best healing item to consume, for example.
	</description>
	<tutorials>
	</tutorials>
	<members>
		<member name="is_active" type="bool" setter="set_is_active" getter="get_is_active" default="true">
			This property can be used to include or exlude the node from processing.
		</member>
	</members>
</class>
